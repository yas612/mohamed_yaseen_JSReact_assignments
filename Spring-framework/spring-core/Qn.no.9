package Question9;

import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class Q9Main {

	public static void main(String[] args) {

		// Loading the Spring XML configuration
        // file into Spring container and
        // it will create the instance of the
        // bean as it loads into container
        ConfigurableApplicationContext cap = new ClassPathXmlApplicationContext("Question9/Q9File.xml");
 
        // It will close the Spring container
        // and as a result invokes the
        // destroy() method
        cap.close();

	}

}

package Question9;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

public class HelloWord {

	// Annotate this method to execute it automatically as the bean is instantiated.
	
    @PostConstruct
    public void init() throws Exception {
        System.out.println("Bean HelloWorld has been " + "instantiated and I'm the " + "init() method");
    }
 
    // Annotate this method to execute it when Spring container is closed
    
    @PreDestroy
    public void destroy() throws Exception {
        System.out.println("Container has been closed " + "and I'm the destroy() method");
    }
	
	
	
}
<?xml version="1.0"?>

-<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">

<modelVersion>4.0.0</modelVersion>

<groupId>SpringMavenDemoProject</groupId>

<artifactId>DemoProject</artifactId>

<version>0.0.1-SNAPSHOT</version>


-<dependencies>

<!-- https://mvnrepository.com/artifact/junit/junit -->



-<dependency>

<groupId>junit</groupId>

<artifactId>junit</artifactId>

<version>4.13.2</version>

<scope>test</scope>

</dependency>

<!-- https://mvnrepository.com/artifact/commons-logging/commons-logging -->



-<dependency>

<groupId>commons-logging</groupId>

<artifactId>commons-logging</artifactId>

<version>1.2</version>

</dependency>

<!-- <dependency><groupId>org.springframework</groupId><artifactId>spring-context</artifactId><version>4.3.12.RELEASE</version><scope>runtime</scope></dependency><dependency><groupId>org.springframework</groupId><artifactId>spring-core</artifactId><version>4.3.12.RELEASE</version><scope>runtime</scope></dependency>-->


<!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->



-<dependency>

<groupId>org.springframework</groupId>

<artifactId>spring-context</artifactId>

<version>5.2.18.RELEASE</version>

</dependency>

<!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->



-<dependency>

<groupId>org.springframework</groupId>

<artifactId>spring-core</artifactId>

<version>5.2.18.RELEASE</version>

</dependency>

<!-- https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api -->



-<dependency>

<groupId>javax.annotation</groupId>

<artifactId>javax.annotation-api</artifactId>

<version>1.3.2</version>

</dependency>

</dependencies>

</project>
<?xml version="1.0"?>

-<beans xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans">

<!-- activate the @PostConstruct and @PreDestroy annotation -->


<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>

<!-- configure the bean -->


<bean class="Question9.HelloWord" id="Helloword"/>

</beans>
